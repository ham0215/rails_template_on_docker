name: Ruby

on:
  push:
    branches:
      - 'feature/*'
      - master
    paths-ignore:
      - README.md
      - docs/**
      - Dockerfile
      - docker-compose.yml

jobs:
  rspec:
    runs-on: ubuntu-18.04
    env:
      RAILS_ENV: test
      DB_HOST: 127.0.0.1
      DB_PORT: 33060
    services:
      db:
        image: mysql:5.7.27
        ports:
          - 33060:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          BIND-ADDRESS: 0.0.0.0
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1.68.0
      with:
        ruby-version: 2.7.2
        bundler-cache: true
    - name: Cache node modules
      uses: actions/cache@v2.1.6
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: bundle install
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3 --path vendor/bundle
    - name: yarn install
      run:  yarn install --check-files
    - name: migration
      run: |
        bundle exec rails db:create
        bundle exec rails db:test:prepare
    - name: run rspec
      run: bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1.68.0
      with:
        ruby-version: 2.7.2
        bundler-cache: true
    - name: run rubocop
      run: |
        gem install rubocop
        rubocop

  brakeman:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1.68.0
      with:
        ruby-version: 2.7.2
        bundler-cache: true
    - name: run brakeman
      run: |
        gem install brakeman
        brakeman -6 -A -w 1
      
  success_notify:
    needs: [rspec, rubocop, brakeman]
    runs-on: ubuntu-latest
    steps:
    - name: slack notify
      uses: rtCamp/action-slack-notify@v2.1.3
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_CHANNEL: ci

  failure_notify:
    if: failure()
    needs: [rspec, rubocop, brakeman]
    runs-on: ubuntu-latest
    steps:
    - name: slack notify
      uses: rtCamp/action-slack-notify@v2.1.3
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_CHANNEL: ci
        SLACK_COLOR: '#FF0000'
